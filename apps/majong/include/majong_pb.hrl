%% -*- coding: utf-8 -*-
%% Automatically generated, do not edit
%% Generated by gpb_compile version 3.26.8

-ifndef(majong_pb).
-define(majong_pb, true).

-define(majong_pb_gpb_version, "3.26.8").

-ifndef('REQ_JOIN_PB_H').
-define('REQ_JOIN_PB_H', true).
-record(req_join,
        {id                             % = 1, int32
        }).
-endif.

-ifndef('REQ_LOGIN_PB_H').
-define('REQ_LOGIN_PB_H', true).
-record(req_login,
        {code,                          % = 1, string (optional)
         channel,                       % = 2, int32 (optional)
         user_id                        % = 3, int32 (optional)
        }).
-endif.

-ifndef('RSP_CREATE_ROOM_PB_H').
-define('RSP_CREATE_ROOM_PB_H', true).
-record(rsp_create_room,
        {status,                        % = 1, sint32
         room_id,                       % = 2, int32 (optional)
         coins                          % = 3, int32 (optional)
        }).
-endif.

-ifndef('PB_RANK_PLAYER_PB_H').
-define('PB_RANK_PLAYER_PB_H', true).
-record(pb_rank_player,
        {name,                          % = 1, string
         logo,                          % = 2, string
         num                            % = 3, int32
        }).
-endif.

-ifndef('RSP_COINS_RANK_PB_H').
-define('RSP_COINS_RANK_PB_H', true).
-record(rsp_coins_rank,
        {players = []                   % = 1, [{msg,pb_rank_player}]
        }).
-endif.

-ifndef('RSP_PAY_PB_H').
-define('RSP_PAY_PB_H', true).
-record(rsp_pay,
        {status,                        % = 1, int32
         coins,                         % = 2, int32 (optional)
         nonce_str,                     % = 3, string (optional)
         sign,                          % = 4, string (optional)
         err_code_des,                  % = 5, string (optional)
         trade_type,                    % = 6, string (optional)
         prepay_id,                     % = 7, string (optional)
         order_id                       % = 8, string (optional)
        }).
-endif.

-ifndef('REQ_PAY_PB_H').
-define('REQ_PAY_PB_H', true).
-record(req_pay,
        {rmb                            % = 1, int32
        }).
-endif.

-ifndef('REQ_READY_PB_H').
-define('REQ_READY_PB_H', true).
-record(req_ready,
        {type                           % = 1, int32
        }).
-endif.

-ifndef('RSP_SHOW_PB_H').
-define('RSP_SHOW_PB_H', true).
-record(rsp_show,
        {status                         % = 1, int32
        }).
-endif.

-ifndef('REQ_ZHUANG_PB_H').
-define('REQ_ZHUANG_PB_H', true).
-record(req_zhuang,
        {base                           % = 1, sint32
        }).
-endif.

-ifndef('PB_UNIT_PB_H').
-define('PB_UNIT_PB_H', true).
-record(pb_unit,
        {type,                          % = 1, int32
         num                            % = 2, int32
        }).
-endif.

-ifndef('RSP_GAME_START_PB_H').
-define('RSP_GAME_START_PB_H', true).
-record(rsp_game_start,
        {uid                            % = 1, int32 (optional)
        }).
-endif.

-ifndef('RSP_START_PB_H').
-define('RSP_START_PB_H', true).
-record(rsp_start,
        {status                         % = 1, sint32
        }).
-endif.

-ifndef('RSP_HEART_PB_H').
-define('RSP_HEART_PB_H', true).
-record(rsp_heart,
        {time                           % = 1, int32
        }).
-endif.

-ifndef('RSP_DISMISS_PB_H').
-define('RSP_DISMISS_PB_H', true).
-record(rsp_dismiss,
        {status                         % = 1, int32
        }).
-endif.

-ifndef('REQ_DISMISS_PB_H').
-define('REQ_DISMISS_PB_H', true).
-record(req_dismiss,
        {
        }).
-endif.

-ifndef('RSP_GET_DATA_PB_H').
-define('RSP_GET_DATA_PB_H', true).
-record(rsp_get_data,
        {data                           % = 1, string
        }).
-endif.

-ifndef('REQ_GET_DATA_PB_H').
-define('REQ_GET_DATA_PB_H', true).
-record(req_get_data,
        {
        }).
-endif.

-ifndef('PB_ROOM_INFO_PB_H').
-define('PB_ROOM_INFO_PB_H', true).
-record(pb_room_info,
        {room_id,                       % = 1, int32
         owner,                         % = 2, int32
         round,                         % = 3, int32
         pay,                           % = 4, int32
         banker,                        % = 5, int32
         special,                       % = 6, int32
         type                           % = 7, int32
        }).
-endif.

-ifndef('PB_PLAYER_PB_H').
-define('PB_PLAYER_PB_H', true).
-record(pb_player,
        {name,                          % = 1, string (optional)
         uid,                           % = 2, int32
         coins,                         % = 3, int32 (optional)
         logo,                          % = 4, string (optional)
         owner,                         % = 5, int32 (optional)
         index,                         % = 6, int32 (optional)
         pai = [],                      % = 7, [{msg,pb_unit}]
         delta                          % = 8, int32 (optional)
        }).
-endif.

-ifndef('RSP_JOIN_PB_H').
-define('RSP_JOIN_PB_H', true).
-record(rsp_join,
        {status,                        % = 1, sint32
         players = [],                  % = 2, [{msg,pb_player}]
         room_info                      % = 3, {msg,pb_room_info} (optional)
        }).
-endif.

-ifndef('RSP_BUY_GEM_PB_H').
-define('RSP_BUY_GEM_PB_H', true).
-record(rsp_buy_gem,
        {status,                        % = 1, int32
         gems                           % = 2, int32 (optional)
        }).
-endif.

-ifndef('REQ_BUY_GEM_PB_H').
-define('REQ_BUY_GEM_PB_H', true).
-record(req_buy_gem,
        {coins                          % = 1, int32
        }).
-endif.

-ifndef('RSP_TASK_CLAIM_PB_H').
-define('RSP_TASK_CLAIM_PB_H', true).
-record(rsp_task_claim,
        {status                         % = 1, int32
        }).
-endif.

-ifndef('PB_TASK_PB_H').
-define('PB_TASK_PB_H', true).
-record(pb_task,
        {id,                            % = 1, int32
         num,                           % = 2, int32
         recive                         % = 3, int32
        }).
-endif.

-ifndef('REQ_SHOW_PB_H').
-define('REQ_SHOW_PB_H', true).
-record(req_show,
        {
        }).
-endif.

-ifndef('RSP_PLAYER_ZHUANG_PB_H').
-define('RSP_PLAYER_ZHUANG_PB_H', true).
-record(rsp_player_zhuang,
        {uid,                           % = 1, int32
         base                           % = 2, sint32
        }).
-endif.

-ifndef('RSP_ZHUANG_PB_H').
-define('RSP_ZHUANG_PB_H', true).
-record(rsp_zhuang,
        {status                         % = 1, sint32
        }).
-endif.

-ifndef('RSP_PLAYER_LEAVE_PB_H').
-define('RSP_PLAYER_LEAVE_PB_H', true).
-record(rsp_player_leave,
        {uid                            % = 1, int32
        }).
-endif.

-ifndef('RSP_LEAVE_PB_H').
-define('RSP_LEAVE_PB_H', true).
-record(rsp_leave,
        {status                         % = 1, sint32
        }).
-endif.

-ifndef('RSP_PLAYER_SCORE_PB_H').
-define('RSP_PLAYER_SCORE_PB_H', true).
-record(rsp_player_score,
        {uid,                           % = 1, int32
         score,                         % = 2, int32
         delta                          % = 3, int32
        }).
-endif.

-ifndef('RSP_SCORE_PB_H').
-define('RSP_SCORE_PB_H', true).
-record(rsp_score,
        {status                         % = 1, int32
        }).
-endif.

-ifndef('RSP_ZHUANG_END_PB_H').
-define('RSP_ZHUANG_END_PB_H', true).
-record(rsp_zhuang_end,
        {uid,                           % = 1, int32
         base                           % = 2, sint32
        }).
-endif.

-ifndef('NOTIFY_DISMISS_PB_H').
-define('NOTIFY_DISMISS_PB_H', true).
-record(notify_dismiss,
        {
        }).
-endif.

-ifndef('RSP_NEW_PLAYER_PB_H').
-define('RSP_NEW_PLAYER_PB_H', true).
-record(rsp_new_player,
        {player                         % = 1, {msg,pb_player}
        }).
-endif.

-ifndef('RSP_LOGIN_PB_H').
-define('RSP_LOGIN_PB_H', true).
-record(rsp_login,
        {status,                        % = 1, sint32
         coins,                         % = 2, int32 (optional)
         gems,                          % = 3, int32 (optional)
         uid,                           % = 4, int32 (optional)
         name,                          % = 5, string (optional)
         logo                           % = 6, string (optional)
        }).
-endif.

-ifndef('REQ_TASK_CLAIM_PB_H').
-define('REQ_TASK_CLAIM_PB_H', true).
-record(req_task_claim,
        {id                             % = 1, int32
        }).
-endif.

-ifndef('REQ_CREATE_ROOM_PB_H').
-define('REQ_CREATE_ROOM_PB_H', true).
-record(req_create_room,
        {round,                         % = 1, int32
         pay,                           % = 2, int32
         banker,                        % = 3, int32
         special,                       % = 4, int32
         type                           % = 5, int32
        }).
-endif.

-ifndef('RSP_GEM_RANK_PB_H').
-define('RSP_GEM_RANK_PB_H', true).
-record(rsp_gem_rank,
        {players = []                   % = 1, [{msg,pb_rank_player}]
        }).
-endif.

-ifndef('REQ_GEM_RANK_PB_H').
-define('REQ_GEM_RANK_PB_H', true).
-record(req_gem_rank,
        {
        }).
-endif.

-ifndef('REQ_TASK_PB_H').
-define('REQ_TASK_PB_H', true).
-record(req_task,
        {
        }).
-endif.

-ifndef('RSP_CHECK_PAY_PB_H').
-define('RSP_CHECK_PAY_PB_H', true).
-record(rsp_check_pay,
        {status,                        % = 1, int32
         order_id,                      % = 2, string
         coins                          % = 3, int32 (optional)
        }).
-endif.

-ifndef('RES_CHECK_PAY_PB_H').
-define('RES_CHECK_PAY_PB_H', true).
-record(res_check_pay,
        {order_id                       % = 1, string
        }).
-endif.

-ifndef('RSP_PLAYER_READY_PB_H').
-define('RSP_PLAYER_READY_PB_H', true).
-record(rsp_player_ready,
        {uid,                           % = 1, int32
         type                           % = 2, int32
        }).
-endif.

-ifndef('RSP_READY_PB_H').
-define('RSP_READY_PB_H', true).
-record(rsp_ready,
        {status                         % = 1, sint32
        }).
-endif.

-ifndef('NOTIFY_SHOW_PB_H').
-define('NOTIFY_SHOW_PB_H', true).
-record(notify_show,
        {uid                            % = 1, int32
        }).
-endif.

-ifndef('RSP_PLAYER_CHAT_PB_H').
-define('RSP_PLAYER_CHAT_PB_H', true).
-record(rsp_player_chat,
        {msg,                           % = 1, string (optional)
         url,                           % = 2, string (optional)
         uid                            % = 3, int32
        }).
-endif.

-ifndef('RSP_RESULT_PB_H').
-define('RSP_RESULT_PB_H', true).
-record(rsp_result,
        {players = []                   % = 1, [{msg,pb_player}]
        }).
-endif.

-ifndef('REQ_START_PB_H').
-define('REQ_START_PB_H', true).
-record(req_start,
        {
        }).
-endif.

-ifndef('REQ_HEART_PB_H').
-define('REQ_HEART_PB_H', true).
-record(req_heart,
        {
        }).
-endif.

-ifndef('RSP_CHAT_PB_H').
-define('RSP_CHAT_PB_H', true).
-record(rsp_chat,
        {status                         % = 1, int32
        }).
-endif.

-ifndef('RSP_SAVE_DATA_PB_H').
-define('RSP_SAVE_DATA_PB_H', true).
-record(rsp_save_data,
        {status                         % = 1, int32
        }).
-endif.

-ifndef('REQ_SAVE_DATA_PB_H').
-define('REQ_SAVE_DATA_PB_H', true).
-record(req_save_data,
        {data                           % = 1, string
        }).
-endif.

-ifndef('REQ_COINS_RANK_PB_H').
-define('REQ_COINS_RANK_PB_H', true).
-record(req_coins_rank,
        {
        }).
-endif.

-ifndef('RSP_TASK_PB_H').
-define('RSP_TASK_PB_H', true).
-record(rsp_task,
        {tasks = []                     % = 1, [{msg,pb_task}]
        }).
-endif.

-ifndef('NOTIFY_ALL_SHOW_PB_H').
-define('NOTIFY_ALL_SHOW_PB_H', true).
-record(notify_all_show,
        {
        }).
-endif.

-ifndef('REQ_SCORE_PB_H').
-define('REQ_SCORE_PB_H', true).
-record(req_score,
        {score                          % = 1, int32
        }).
-endif.

-ifndef('REQ_LEAVE_PB_H').
-define('REQ_LEAVE_PB_H', true).
-record(req_leave,
        {uid                            % = 1, int32
        }).
-endif.

-ifndef('RSP_CONTENT_PB_H').
-define('RSP_CONTENT_PB_H', true).
-record(rsp_content,
        {status                         % = 1, int32
        }).
-endif.

-ifndef('REQ_CONTENT_PB_H').
-define('REQ_CONTENT_PB_H', true).
-record(req_content,
        {weixin,                        % = 1, string
         text                           % = 2, string
        }).
-endif.

-ifndef('REQ_CHAT_PB_H').
-define('REQ_CHAT_PB_H', true).
-record(req_chat,
        {msg,                           % = 1, string (optional)
         voice = []                     % = 2, [bytes]
        }).
-endif.

-ifndef('RSP_PUB_PB_H').
-define('RSP_PUB_PB_H', true).
-record(rsp_pub,
        {status,                        % = 1, sint32
         pub                            % = 2, string (optional)
        }).
-endif.

-ifndef('REQ_PUB_PB_H').
-define('REQ_PUB_PB_H', true).
-record(req_pub,
        {
        }).
-endif.

-endif.
